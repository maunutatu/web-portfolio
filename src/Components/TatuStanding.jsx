/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/TatuStanding.gltf
*/

/* eslint-disable react/no-unknown-property */


import React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

// eslint-disable-next-line react/display-name
const TatuAnimations = forwardRef((props, ref) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./models/TatuStanding.gltf')
  const { actions, names } = useAnimations(animations, group)

  const wavingAnimationActions = useAnimations(useGLTF('./models/TatuWaving.gltf').animations, group).actions
  const textingAnimationActions = useAnimations(useGLTF('./models/TatuTexting.gltf').animations, group).actions
  const kickingAnimationActions = useAnimations(useGLTF('./models/TatuKicking.gltf').animations, group).actions

  const waveAnimation = () => {
    actions[names[0]].fadeOut(0.5)
    wavingAnimationActions[names[0]].reset().fadeIn(0.5).play()
  }

  const textAnimation = () => {
    wavingAnimationActions[names[0]].fadeOut(0.5)
    textingAnimationActions[names[0]].reset().fadeIn(0.5).play()
  }

  const kickAnimation = () => {
    textingAnimationActions[names[0]].fadeOut(0.5)
    kickingAnimationActions[names[0]].reset().fadeIn(0.5).play()
  }

  const standAnimation = () => {
    kickingAnimationActions[names[0]].fadeOut(0.5)
    actions[names[0]].reset().fadeIn(0.5).play()
  }

  useImperativeHandle(ref, () => {
    return {
      waveAnimation,
      textAnimation,
      kickAnimation,
      standAnimation
    }
  })

  useEffect(() => {
    actions[names[0]].reset().fadeIn(0.5).play()
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature">
          <primitive object={nodes.Hips}/>
          <skinnedMesh name="Wolf3D_Body" geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body}
            skeleton={nodes.Wolf3D_Body.skeleton}/>
          <skinnedMesh name="Wolf3D_Hair" geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair}
            skeleton={nodes.Wolf3D_Hair.skeleton}/>
          <skinnedMesh name="Wolf3D_Outfit_Bottom" geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
            material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}/>
          <skinnedMesh name="Wolf3D_Outfit_Footwear" geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
            material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}/>
          <skinnedMesh name="Wolf3D_Outfit_Top" geometry={nodes.Wolf3D_Outfit_Top.geometry}
            material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton}/>
          <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye}
            skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
            morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}/>
          <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye}
            skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
            morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}/>
          <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin}
            skeleton={nodes.Wolf3D_Head.skeleton}
            morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
            morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}/>
          <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth}
            skeleton={nodes.Wolf3D_Teeth.skeleton}
            morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
            morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}/>
        </group>
      </group>
    </group>
  )
})

export default TatuAnimations

useGLTF.preload('./models/TatuStanding.gltf')
